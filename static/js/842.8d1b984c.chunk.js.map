{"version":3,"file":"static/js/842.8d1b984c.chunk.js","mappings":"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","sources":["components/Home/Home.jsx","components/Home/Home.styled.jsx","components/Movies/Movies.styled.jsx","services/apiFilm.js","services/getListFilm.js"],"sourcesContent":["import { getTrending } from 'services/apiFilm';\nimport { useEffect, useState } from 'react';\n\nimport { getListFilm } from 'services/getListFilm';\nimport Loader from 'components/Loader/Loader';\nimport { useLocation } from 'react-router-dom';\n// const {getListFilm} = lazy(() => import('../services/getListFilm'));\n\nconst { TrendsList } = require('./Home.styled');\n\nconst Home = () => {\n  const [trends, setTrends] = useState([]);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsloading] = useState(false);\n  const location = useLocation();\n\n\n  const errorMsg = <p>Somsing went wrong.... Try again later</p>;\n\n  useEffect(() => {\n    const params = {\n      genres: 'all',\n      window: 'day',\n    };\n    setIsloading(true);\n    getTrending(params)\n      .then(e => {\n        setTrends(e);\n        setIsloading(false);\n      })\n      .catch(() => {\n        setError(true);\n      });\n  }, []);\n\n  const items = getListFilm(trends, '/movies/', location);\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && errorMsg}\n      <TrendsList>{items}</TrendsList>\n    </>\n  );\n};\n\nexport default Home;\n","import styled from '@emotion/styled';\nimport { NavLink } from \"react-router-dom\";\n\n\nconst TrendsList = styled.ul`\n  margin-right: auto;\n  max-width: 300;\n`;\nconst ListItem = styled.li`\n  font-size: 16px;\n`;\n\n const Link = styled(NavLink)`\n  padding: 5px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n\n  &.active {\n    color: white;\n    background-color: orangered;\n  }\n  :hover{\n    color: white;\n    background-color: orangered;\n  }\n`;\n\n\nexport { TrendsList, ListItem , Link};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nconst FormSearch = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst InputQuery = styled.input`\n  margin: 15px;\n  padding: 10px;\n  border: 0;\n  box-shadow: 0 0 15px 4px rgba(0, 0, 0, 0.06);\n  transition: all;\n  transition-timing-function: cubic-bezier();\n  transition-duration: 350ms;\n  outline: none;\n\n  :focus,\n  :active {\n    border: 0;\n    box-shadow: 0 0 15px 4px rgba(42, 255, 35, 0.959);\n    /* background-color: #dfdfdf; */\n    /* color: #535353; */\n  }\n`;\n\nconst SubmitBtn = styled.button`\n  margin: 15px;\n  padding: 10px;\n  border: none;\n  background-color: #3f51b5;\n  color: #fff;\n  font-weight: 600;\n  border-radius: 5px;\n  box-shadow: 0 0 15px 4px rgba(0, 0, 0, 0.06);\n\n  /* width:100%; */\n  transition-timing-function: cubic-bezier();\n  transition-duration: 500ms;\n  outline: none;\n  :active {\n    /* border: 0; */\n    box-shadow: 0 0 15px 15px rgba(0, 0, 0, 0.8);\n\n    /* background-color: #526456; */\n    /* color: #535353; */\n  }\n`;\n\n// const InputPhone = styled.input``;\n\nconst List = styled.ul`\n  margin-right: auto;\n  max-width: 300;\n`;\nconst ListItem = styled.li`\n  margin-top: 5px;\n  margin-bottom: 5px;\n\n  font-size: 16px;\n`;\n\nconst Link = styled(NavLink)`\n  padding: 5px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n\n  &.active {\n    color: white;\n    background-color: orangered;\n  }\n  :hover {\n    color: white;\n    background-color: orangered;\n  }\n`;\n\nexport { FormSearch, List, Link, ListItem, SubmitBtn, InputQuery };\n","// import axios from 'axios';\n\nimport axios from 'axios';\nconst API_KEY = 'f2c538717486cd7dc01f7314dfb697ab';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\n\nasync function getTrending({ genres = 'all', window = 'day' }) {\n  const URL = `/trending/${genres}/${window}`;\n  const parameters = {\n    api_key: API_KEY,\n  };\n  try {\n    const data = await instance.get(URL, {\n      params: parameters,\n    });\n    return [...data.data.results];\n  } catch (error) {\n    console.error(error);\n  }\n}\nasync function getFilmById(id) {\n  const URL = `movie/${id}`;\n  const parameters = {\n    api_key: API_KEY,\n  };\n  try {\n    const data = await instance.get(URL, {\n      params: parameters,\n    });\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getCastsById(id) {\n  const URL = `/movie/${id}/credits`;\n  const parameters = {\n    api_key: API_KEY,\n  };\n  try {\n    const data = await instance.get(URL, {\n      params: parameters,\n    });\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nasync function getReviewsById(id) {\n    const URL = `/movie/${id}/reviews`;\n    const parameters = {\n      api_key: API_KEY,\n    };\n    try {\n      const data = await instance.get(URL, {\n        params: parameters,\n      });\n      return data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  async function getMovisByQuery(query) {\n    const URL = `/search/movie`;\n    const parameters = {\n      api_key: API_KEY,\n      query: query\n    };\n    try {\n      const data = await instance.get(URL, {\n        params: parameters,\n      });\n      return data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\nexport { getTrending, getFilmById, getMovisByQuery,getCastsById, getReviewsById };\n","import { Link, ListItem } from 'components/Movies/Movies.styled';\n\n\nexport const getListFilm = (array, path = '', location) => {\n  return array.map(movie => {\n    const title = movie.original_name\n      ? movie.original_name\n      : movie.original_title;\n    return (\n      <ListItem key={movie.id}>\n        <Link to={`${path}${movie.id}`} state={{ from: location }}>\n          {title}\n        </Link>\n      </ListItem>\n    );\n  });\n};\n"],"names":["TrendsList","require","useState","trends","setTrends","error","setError","isLoading","setIsloading","location","useLocation","errorMsg","useEffect","getTrending","genres","window","then","e","catch","items","getListFilm","styled","ListItem","Link","NavLink","List","API_KEY","instance","axios","baseURL","URL","parameters","api_key","get","params","data","results","console","getFilmById","id","getCastsById","getReviewsById","getMovisByQuery","query","array","path","map","movie","title","original_name","original_title","to","state","from"],"sourceRoot":""}