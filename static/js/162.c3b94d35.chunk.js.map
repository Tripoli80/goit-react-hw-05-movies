{"version":3,"file":"static/js/162.c3b94d35.chunk.js","mappings":"wTAGMA,EAAaC,EAAAA,EAAAA,KAAH,qEAKVC,EAAaD,EAAAA,EAAAA,MAAH,0ZAqBVE,EAAYF,EAAAA,EAAAA,OAAH,4e,GA2BFA,EAAAA,EAAAA,GAAH,kEAIOA,EAAAA,EAAAA,GAAH,6CAIDA,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,0P,QCpCV,EAzBkB,SAAAI,GAAU,IAAD,EACzB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEQC,EAAkCJ,EAAlCI,cAAeC,EAAmBL,EAAnBK,eAEjBC,EAAW,UAAGJ,EAAaK,IAAI,gBAApB,QAAgC,GAUjD,OANAC,EAAAA,EAAAA,YAAU,WACJF,GACFD,EAAeC,EAGlB,GAAE,KAED,+BACE,UAACX,EAAD,CAAYc,SAAUL,EAAtB,WACE,SAACP,EAAD,CAAYa,KAAK,OAAOC,MAAOL,EAAaM,SAZ5B,SAAAC,GACpBV,EAAgB,CAAEW,MAAOD,EAAEE,OAAOJ,OACnC,KAWK,SAACb,EAAD,yBAIP,EC0CD,EA5De,WACb,OAA4BkB,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAGA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOF,EAAP,KAAcK,EAAd,KACA,GAA0BH,EAAAA,EAAAA,WAAS,GAAnC,eAAOI,EAAP,KAAcC,EAAd,KACA,GAAkCL,EAAAA,EAAAA,WAAS,GAA3C,eAAOM,EAAP,KAAkBC,EAAlB,KACMC,GAAa,2CACbC,GAAW,kEAEXC,EAAO,mCAAG,WAAMZ,GAAN,0EACTA,EADS,wDAIdS,GAAa,GAJC,UAKKI,EAAAA,EAAAA,IAAgBb,GALrB,UAKRc,EALQ,OAMdL,GAAa,GACRK,EAPS,wBAQZP,GAAS,GARG,2BAYdH,EAAUU,EAAKA,KAAKC,SAZN,4CAAH,uDA6BbrB,EAAAA,EAAAA,YAAU,WACRkB,EAAQZ,EACT,GAAE,CAACA,IAEJ,IAAMgB,GAAmBC,EAAAA,EAAAA,GAAYd,GAErC,OACE,iCACE,SAAC,EAAD,CACEb,cArBgB,SAAAS,GACpBA,EAAEmB,iBACEnB,EAAEE,OAAOL,KAAKC,QAAUG,IAC1BI,EAAU,IACVC,EAASN,EAAEE,OAAOL,KAAKC,OAE1B,EAgBKN,eAdiB,SAAAS,GACrBK,EAASL,EACV,IAeIQ,IAAa,SAACW,EAAA,EAAD,KACZhB,EAAOiB,SAAWZ,GAAaE,EAChCJ,GAASK,EACS,IAAlBR,EAAOiB,SAAgB,SAAC,KAAD,UAAOJ,MAGpC,C,oJCdKK,GAjDavC,EAAAA,EAAAA,KAAH,qEAKGA,EAAAA,EAAAA,MAAH,sZAmBEA,EAAAA,EAAAA,OAAH,4eAyBFA,EAAAA,EAAAA,GAAH,mEAIJwC,EAAWxC,EAAAA,EAAAA,GAAH,yFAORyC,GAAOzC,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,oR,6MC5DJ0C,EAAU,mCAEVC,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,kCADX,SAIeC,EAAY,GAAZA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,4GAA6BC,OAAAA,OAA7B,MAAsC,MAAtC,MAA6CC,OAAAA,OAA7C,MAAsD,MAAtD,EACQC,EADR,oBAC2BF,EAD3B,YACqCC,GAC7BE,EAAa,CACjBC,QAAST,GAHb,kBAMuBC,EAAShC,IAAIsC,EAAK,CACnCG,OAAQF,IAPd,cAMUlB,EANV,iCASeA,EAAKA,KAAKC,UATzB,kCAWIoB,QAAQ7B,MAAR,MAXJ,0FAce8B,EAAY,GAAZA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA2BC,GAA3B,kFACQN,EADR,gBACuBM,GACfL,EAAa,CACjBC,QAAST,GAHb,kBAMuBC,EAAShC,IAAIsC,EAAK,CACnCG,OAAQF,IAPd,cAMUlB,EANV,yBASWA,GATX,gCAWIqB,QAAQ7B,MAAR,MAXJ,yFAeegC,EAAa,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BD,GAA5B,kFACQN,EADR,iBACwBM,EADxB,YAEQL,EAAa,CACjBC,QAAST,GAHb,kBAMuBC,EAAShC,IAAIsC,EAAK,CACnCG,OAAQF,IAPd,cAMUlB,EANV,yBASWA,GATX,gCAWIqB,QAAQ7B,MAAR,MAXJ,yFAceiC,EAAe,GAAfA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA8BF,GAA9B,kFACUN,EADV,iBAC0BM,EAD1B,YAEUL,EAAa,CACjBC,QAAST,GAHf,kBAMyBC,EAAShC,IAAIsC,EAAK,CACnCG,OAAQF,IAPhB,cAMYlB,EANZ,yBASaA,GATb,gCAWMqB,QAAQ7B,MAAR,MAXN,yFAciBO,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+Bb,GAA/B,+FAEQgC,EAAa,CACjBC,QAAST,EACTxB,MAAOA,GAJX,kBAOuByB,EAAShC,IAPhC,gBAOyC,CACnCyC,OAAQF,IARd,cAOUlB,EAPV,yBAUWA,GAVX,gCAYIqB,QAAQ7B,MAAR,MAZJ,gF,8EChEWW,EAAY,SAACuB,GAAkB,IAAXC,EAAU,uDAAL,GACpC,OAAOD,EAAME,KAAI,SAAAC,GACX,IAAMC,EAAQD,EAAME,cAChBF,EAAME,cACNF,EAAMG,eACV,OACE,SAAC,KAAD,WACE,SAAC,KAAD,CAAMC,GAAE,UAAKN,GAAL,OAAYE,EAAMN,IAA1B,SAAiCO,KADpBD,EAAMN,GAIxB,GACN,C","sources":["components/SearchBox/SearchBox.styled.jsx","components/SearchBox/SearchBox.jsx","components/Movies/Movies.jsx","components/Movies/Movies.styled.jsx","services/apiFilm.js","services/getListFilm.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from \"react-router-dom\";\n\nconst FormSearch = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst InputQuery = styled.input`\n\n\n  margin: 15px;\n  padding: 10px;\n  border: 0;\n  box-shadow: 0 0 15px 4px rgba(0, 0, 0, 0.06);\n  transition: all;\n  transition-timing-function: cubic-bezier();\n  transition-duration: 350ms;\n  outline: none;\n\n  :focus,\n  :active {\n    border: 0;\n    box-shadow: 0 0 15px 4px rgba(42, 255, 35, 0.959);\n    /* background-color: #dfdfdf; */\n    /* color: #535353; */\n  }\n`;\n\nconst SubmitBtn = styled.button`\n  margin: 15px;\n  padding: 10px;\n  border: none;\n  background-color: #3f51b5;\n  color: #fff;\n  font-weight: 600;\n  border-radius: 5px;\n  box-shadow: 0 0 15px 4px rgba(0, 0, 0, 0.06);\n\n  /* width:100%; */\n  transition-timing-function: cubic-bezier();\n  transition-duration: 500ms;\n  outline: none;\n  :active {\n    /* border: 0; */\n    box-shadow: 0 0 15px 15px rgba(0, 0, 0, 0.8);\n\n    /* background-color: #526456; */\n    /* color: #535353; */\n  }\n`;\n\n// const InputPhone = styled.input``;\n\n\n\nconst List = styled.ul`\n  margin-right: auto;\n  max-width: 300;\n`;\nconst ListItem = styled.li`\n  font-size: 16px;\n`;\n\nconst Link = styled(NavLink)`\npadding: 5px 16px;\nborder-radius: 4px;\ntext-decoration: none;\ncolor: black;\nfont-weight: 500;\n\n&.active {\n  color: white;\n  background-color: orangered;\n}\n:hover{\n  color: white;\n  background-color: orangered;\n}\n`;\n\n\nexport { FormSearch, List, Link,ListItem,SubmitBtn, InputQuery };\n","import { useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { FormSearch, InputQuery, SubmitBtn } from './SearchBox.styled';\nconst SearchBox = props => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const { heandleSubmit, mountSearchBox } = props;\n\n  const productName = searchParams.get('query') ?? '';\n  const onChangeInput = e => {\n    setSearchParams({ query: e.target.value });\n  };\n  useEffect(() => {\n    if (productName) {\n      mountSearchBox(productName);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <>\n      <FormSearch onSubmit={heandleSubmit}>\n        <InputQuery name=\"name\" value={productName} onChange={onChangeInput} />\n        <SubmitBtn>Search</SubmitBtn>\n      </FormSearch>\n    </>\n  );\n};\n\nexport default SearchBox;\n","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { getMovisByQuery } from 'services/apiFilm';\nimport { List } from './Movies.styled';\nimport { getListFilm } from 'services/getListFilm';\nimport Loader from 'components/Loader/Loader';\nimport SearchBox from 'components/SearchBox/SearchBox';\n\nconst Movies = () => {\n  const [Movies, setMovies] = useState([]);\n  // const [page, setPage] = useState(1);\n  // const [totalPage, setTotalPage] = useState(0);\n  const [query, setQuery] = useState('');\n  const [error, setError] = useState(false);\n  const [isLoading, setIsloading] = useState(false);\n  const noFaundMsg = <p>Not find Movies</p>;\n  const errorMsg = <p>Somsing went wrong.... Try again later</p>;\n\n  const postGet = async query => {\n    if (!query) {\n      return;\n    }\n    setIsloading(true);\n    const data = await getMovisByQuery(query);\n    setIsloading(false);\n    if (!data) {\n      setError(true);\n      return;\n    }\n\n    setMovies(data.data.results);\n    // setPage(data.data.page);\n    // setTotalPage(data.data.total_pages);\n  };\n\n  const heandleSubmit = e => {\n    e.preventDefault();\n    if (e.target.name.value !== query) {\n      setMovies([]);\n      setQuery(e.target.name.value);\n    }\n  };\n\n  const mountSearchBox = query => {\n    setQuery(query);\n  };\n\n  useEffect(() => {\n    postGet(query);\n  }, [query]);\n\n  const resultSearchFilm = getListFilm(Movies);\n\n  return (\n    <>\n      <SearchBox\n        heandleSubmit={heandleSubmit}\n        mountSearchBox={mountSearchBox}\n      />\n\n      {isLoading && <Loader />}\n      {!Movies.length && !isLoading && noFaundMsg}\n      {error && errorMsg}\n      {Movies.length !== 0 && <List>{resultSearchFilm}</List>}\n    </>\n  );\n};\n\nexport default Movies;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nconst FormSearch = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst InputQuery = styled.input`\n  margin: 15px;\n  padding: 10px;\n  border: 0;\n  box-shadow: 0 0 15px 4px rgba(0, 0, 0, 0.06);\n  transition: all;\n  transition-timing-function: cubic-bezier();\n  transition-duration: 350ms;\n  outline: none;\n\n  :focus,\n  :active {\n    border: 0;\n    box-shadow: 0 0 15px 4px rgba(42, 255, 35, 0.959);\n    /* background-color: #dfdfdf; */\n    /* color: #535353; */\n  }\n`;\n\nconst SubmitBtn = styled.button`\n  margin: 15px;\n  padding: 10px;\n  border: none;\n  background-color: #3f51b5;\n  color: #fff;\n  font-weight: 600;\n  border-radius: 5px;\n  box-shadow: 0 0 15px 4px rgba(0, 0, 0, 0.06);\n\n  /* width:100%; */\n  transition-timing-function: cubic-bezier();\n  transition-duration: 500ms;\n  outline: none;\n  :active {\n    /* border: 0; */\n    box-shadow: 0 0 15px 15px rgba(0, 0, 0, 0.8);\n\n    /* background-color: #526456; */\n    /* color: #535353; */\n  }\n`;\n\n// const InputPhone = styled.input``;\n\nconst List = styled.ul`\n  margin-right: auto;\n  max-width: 300;\n`;\nconst ListItem = styled.li`\n  margin-top: 5px;\n  margin-bottom: 5px;\n\n  font-size: 16px;\n`;\n\nconst Link = styled(NavLink)`\n  padding: 5px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n\n  &.active {\n    color: white;\n    background-color: orangered;\n  }\n  :hover {\n    color: white;\n    background-color: orangered;\n  }\n`;\n\nexport { FormSearch, List, Link, ListItem, SubmitBtn, InputQuery };\n","// import axios from 'axios';\n\nimport axios from 'axios';\nconst API_KEY = 'f2c538717486cd7dc01f7314dfb697ab';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\n\nasync function getTrending({ genres = 'all', window = 'day' }) {\n  const URL = `/trending/${genres}/${window}`;\n  const parameters = {\n    api_key: API_KEY,\n  };\n  try {\n    const data = await instance.get(URL, {\n      params: parameters,\n    });\n    return [...data.data.results];\n  } catch (error) {\n    console.error(error);\n  }\n}\nasync function getFilmById(id) {\n  const URL = `movie/${id}`;\n  const parameters = {\n    api_key: API_KEY,\n  };\n  try {\n    const data = await instance.get(URL, {\n      params: parameters,\n    });\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getCastsById(id) {\n  const URL = `/movie/${id}/credits`;\n  const parameters = {\n    api_key: API_KEY,\n  };\n  try {\n    const data = await instance.get(URL, {\n      params: parameters,\n    });\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nasync function getReviewsById(id) {\n    const URL = `/movie/${id}/reviews`;\n    const parameters = {\n      api_key: API_KEY,\n    };\n    try {\n      const data = await instance.get(URL, {\n        params: parameters,\n      });\n      return data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  async function getMovisByQuery(query) {\n    const URL = `/search/movie`;\n    const parameters = {\n      api_key: API_KEY,\n      query: query\n    };\n    try {\n      const data = await instance.get(URL, {\n        params: parameters,\n      });\n      return data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\nexport { getTrending, getFilmById, getMovisByQuery,getCastsById, getReviewsById };\n","import { Link, ListItem } from \"components/Movies/Movies.styled\";\n\nexport const getListFilm=(array, path='')=>{\n  return array.map(movie => {\n        const title = movie.original_name\n          ? movie.original_name\n          : movie.original_title;\n        return (\n          <ListItem key={movie.id}>\n            <Link to={`${path}${movie.id}`}>{title}</Link>\n          </ListItem>\n        );\n      })\n}"],"names":["FormSearch","styled","InputQuery","SubmitBtn","NavLink","props","useSearchParams","searchParams","setSearchParams","heandleSubmit","mountSearchBox","productName","get","useEffect","onSubmit","name","value","onChange","e","query","target","useState","Movies","setMovies","setQuery","error","setError","isLoading","setIsloading","noFaundMsg","errorMsg","postGet","getMovisByQuery","data","results","resultSearchFilm","getListFilm","preventDefault","Loader","length","List","ListItem","Link","API_KEY","instance","axios","baseURL","getTrending","genres","window","URL","parameters","api_key","params","console","getFilmById","id","getCastsById","getReviewsById","array","path","map","movie","title","original_name","original_title","to"],"sourceRoot":""}