{"version":3,"file":"static/js/654.7d28a0a2.chunk.js","mappings":"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","sources":["components/FilmDetails/FilmDetails.styled.jsx","components/FilmDetails/FilmDetails.jsx","services/apiFilm.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from \"react-router-dom\";\n\n\nexport const Container = styled.div`\n  display: flex;\n  background-color: #f69e11;\n`;\nexport const Poster = styled.img`\n  width: 200px;\n`;\n\nexport const Description = styled.div`\n  padding: 20px;\n\n`;\nexport const AdditionalInfo = styled.div`\n  padding: 20px;\n\n`;\n\n\nexport const SubmitBtn = styled.button`\n  margin: 15px;\n  padding: 10px;\n  border: none;\n  background-color: #3f51b5;\n  color: #fff;\n  font-weight: 600;\n  border-radius: 5px;\n  box-shadow: 0 0 15px 4px rgba(0, 0, 0, 0.06);\n\n  /* width:100%; */\n  transition-timing-function: cubic-bezier();\n  transition-duration: 500ms;\n  outline: none;\n  :active {\n    /* border: 0; */\n    box-shadow: 0 0 15px 15px rgba(0, 0, 0, 0.8);\n\n    /* background-color: #526456; */\n    /* color: #535353; */\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\n\n\n\n","import { useState, useEffect } from 'react';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport { getFilmById } from 'services/apiFilm';\nimport { Link, Outlet } from 'react-router-dom';\n\nimport {\n  Poster,\n  Container,\n  Description,\n  SubmitBtn,\n  AdditionalInfo,\n} from './FilmDetails.styled';\n\nconst FilmDetails = () => {\n  const [detailsInfo, setDetailsInfo] = useState(0);\n  const { idSelectFilm } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  useEffect(() => {\n    getFilmById(idSelectFilm).then(setDetailsInfo);\n  }, [idSelectFilm]);\n  if (!detailsInfo) {\n    return <p>Not Find details</p>;\n  }\n  const { poster_path, popularity, overview, title, name, genres } =\n    detailsInfo.data;\n\n  const goBack = () => {\n    const backLink = location.state?.from ?? '/';\n\n    navigate(backLink);\n  };\n\n  return (\n    <>\n      {<SubmitBtn onClick={goBack}>Go Back</SubmitBtn>}\n      <Container>\n        <Poster\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n              : 'https://klpmotors.ru/tpl/palitra/images/nophoto.jpg'\n          }\n        />\n        <Description>\n          <h3>{title ? title : name}</h3>\n          <p>\n            User score : <b>{popularity ? Math.round(popularity) : '--'}%</b>\n          </p>\n          <h3>Overview</h3>\n          <p>{overview ? overview : '------'}</p>\n          <h3>Genres</h3>\n          <p>{genres ? genres.map(item => item.name).join(', ') : '---'}</p>\n        </Description>\n      </Container>\n      <AdditionalInfo>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reiwers\">Reiwers</Link>\n          </li>\n        </ul>\n        <Outlet />\n      </AdditionalInfo>\n    </>\n  );\n};\nexport default FilmDetails;\n","// import axios from 'axios';\n\nimport axios from 'axios';\nconst API_KEY = 'f2c538717486cd7dc01f7314dfb697ab';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\n\nasync function getTrending({ genres = 'all', window = 'day' }) {\n  const URL = `/trending/${genres}/${window}`;\n  const parameters = {\n    api_key: API_KEY,\n  };\n  try {\n    const data = await instance.get(URL, {\n      params: parameters,\n    });\n    return [...data.data.results];\n  } catch (error) {\n    console.error(error);\n  }\n}\nasync function getFilmById(id) {\n  const URL = `movie/${id}`;\n  const parameters = {\n    api_key: API_KEY,\n  };\n  try {\n    const data = await instance.get(URL, {\n      params: parameters,\n    });\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getCastsById(id) {\n  const URL = `/movie/${id}/credits`;\n  const parameters = {\n    api_key: API_KEY,\n  };\n  try {\n    const data = await instance.get(URL, {\n      params: parameters,\n    });\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nasync function getReviewsById(id) {\n    const URL = `/movie/${id}/reviews`;\n    const parameters = {\n      api_key: API_KEY,\n    };\n    try {\n      const data = await instance.get(URL, {\n        params: parameters,\n      });\n      return data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  async function getMovisByQuery(query) {\n    const URL = `/search/movie`;\n    const parameters = {\n      api_key: API_KEY,\n      query: query\n    };\n    try {\n      const data = await instance.get(URL, {\n        params: parameters,\n      });\n      return data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\nexport { getTrending, getFilmById, getMovisByQuery,getCastsById, getReviewsById };\n"],"names":["Container","styled","Poster","Description","AdditionalInfo","SubmitBtn","Link","useState","detailsInfo","setDetailsInfo","idSelectFilm","useParams","location","useLocation","navigate","useNavigate","useEffect","getFilmById","then","data","poster_path","popularity","overview","title","name","genres","onClick","backLink","state","from","src","Math","round","map","item","join","to","API_KEY","instance","axios","baseURL","getTrending","window","URL","parameters","api_key","get","params","results","console","error","id","getCastsById","getReviewsById","getMovisByQuery","query"],"sourceRoot":""}