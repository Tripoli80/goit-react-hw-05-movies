{"version":3,"file":"static/js/162.891f2009.chunk.js","mappings":"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","sources":["components/SearchBox/SearchBox.styled.jsx","components/SearchBox/SearchBox.jsx","components/Movies/Movies.jsx","components/Movies/Movies.styled.jsx","services/apiFilm.js","services/getListFilm.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from \"react-router-dom\";\n\nconst FormSearch = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst InputQuery = styled.input`\n\n\n  margin: 15px;\n  padding: 10px;\n  border: 0;\n  box-shadow: 0 0 15px 4px rgba(0, 0, 0, 0.06);\n  transition: all;\n  transition-timing-function: cubic-bezier();\n  transition-duration: 350ms;\n  outline: none;\n\n  :focus,\n  :active {\n    border: 0;\n    box-shadow: 0 0 15px 4px rgba(42, 255, 35, 0.959);\n    /* background-color: #dfdfdf; */\n    /* color: #535353; */\n  }\n`;\n\nconst SubmitBtn = styled.button`\n  margin: 15px;\n  padding: 10px;\n  border: none;\n  background-color: #3f51b5;\n  color: #fff;\n  font-weight: 600;\n  border-radius: 5px;\n  box-shadow: 0 0 15px 4px rgba(0, 0, 0, 0.06);\n\n  /* width:100%; */\n  transition-timing-function: cubic-bezier();\n  transition-duration: 500ms;\n  outline: none;\n  :active {\n    /* border: 0; */\n    box-shadow: 0 0 15px 15px rgba(0, 0, 0, 0.8);\n\n    /* background-color: #526456; */\n    /* color: #535353; */\n  }\n`;\n\n// const InputPhone = styled.input``;\n\n\n\nconst List = styled.ul`\n  margin-right: auto;\n  max-width: 300;\n`;\nconst ListItem = styled.li`\n  font-size: 16px;\n`;\n\nconst Link = styled(NavLink)`\npadding: 5px 16px;\nborder-radius: 4px;\ntext-decoration: none;\ncolor: black;\nfont-weight: 500;\n\n&.active {\n  color: white;\n  background-color: orangered;\n}\n:hover{\n  color: white;\n  background-color: orangered;\n}\n`;\n\n\nexport { FormSearch, List, Link,ListItem,SubmitBtn, InputQuery };\n","import { FormSearch, InputQuery, SubmitBtn } from './SearchBox.styled';\nconst SearchBox = props => {\n  // const [query, setQury]= useState(\"\")\n\n  const { heandleSubmit, value, onChangeInput } = props;\n\n  return (\n    <>\n      <FormSearch onSubmit={heandleSubmit}>\n        <InputQuery name=\"name\" value={value} onChange={onChangeInput} />\n        <SubmitBtn>Search</SubmitBtn>\n      </FormSearch>\n    </>\n  );\n};\n\nexport default SearchBox;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { getMovisByQuery } from 'services/apiFilm';\nimport { List } from './Movies.styled';\nimport { getListFilm } from 'services/getListFilm';\nimport Loader from 'components/Loader/Loader';\nimport SearchBox from 'components/SearchBox/SearchBox';\nimport { useMemo } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const [query, setQuery] = useState();\n\n  const [Movies, setMovies] = useState([]);\n\n  const [error, setError] = useState(false);\n  const [isLoading, setIsloading] = useState(false);\n  const noFaundMsg = <p>Not find Movies</p>;\n  const errorMsg = <p>Somsing went wrong.... Try again later</p>;\n  const filmToSearch = searchParams.get('query') ?? '';\n\n  localStorage.setItem('query', filmToSearch);\n  useMemo(() => {\n    localStorage.setItem('query', filmToSearch);\n  }, [filmToSearch]);\n\n  const init = () => {\n    postGet(localStorage.getItem('query'));\n  };\n\n  useEffect(init, []);\n\n  useEffect(() => {\n    query && postGet(query);\n  }, [query]);\n\n  const postGet = async query => {\n    if (!query) {\n      return;\n    }\n    setIsloading(true);\n    setMovies([]);\n    const data = await getMovisByQuery(query);\n    setIsloading(false);\n    if (!data) {\n      setError(true);\n      return;\n    }\n    setMovies(data.data.results);\n  };\n\n  const heandleSubmit = e => {\n    e.preventDefault();\n    setQuery(filmToSearch);\n  };\n\n  const onChangeInput = e => {\n    setSearchParams(e.target.value !== '' ? { query: e.target.value } : {});\n  };\n\n  const renderListFilms = useMemo(() => {\n    return getListFilm(Movies, '', location);\n  }, [Movies, location]);\n\n  return (\n    <>\n      <SearchBox\n        heandleSubmit={heandleSubmit}\n        onChangeInput={onChangeInput}\n        value={filmToSearch}\n      />\n      {isLoading && <Loader />}\n      {!Movies.length && !isLoading && noFaundMsg}\n      {error && errorMsg}\n      {Movies.length !== 0 && <List>{renderListFilms}</List>}\n    </>\n  );\n};\n\nexport default Movies;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nconst FormSearch = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst InputQuery = styled.input`\n  margin: 15px;\n  padding: 10px;\n  border: 0;\n  box-shadow: 0 0 15px 4px rgba(0, 0, 0, 0.06);\n  transition: all;\n  transition-timing-function: cubic-bezier();\n  transition-duration: 350ms;\n  outline: none;\n\n  :focus,\n  :active {\n    border: 0;\n    box-shadow: 0 0 15px 4px rgba(42, 255, 35, 0.959);\n    /* background-color: #dfdfdf; */\n    /* color: #535353; */\n  }\n`;\n\nconst SubmitBtn = styled.button`\n  margin: 15px;\n  padding: 10px;\n  border: none;\n  background-color: #3f51b5;\n  color: #fff;\n  font-weight: 600;\n  border-radius: 5px;\n  box-shadow: 0 0 15px 4px rgba(0, 0, 0, 0.06);\n\n  /* width:100%; */\n  transition-timing-function: cubic-bezier();\n  transition-duration: 500ms;\n  outline: none;\n  :active {\n    /* border: 0; */\n    box-shadow: 0 0 15px 15px rgba(0, 0, 0, 0.8);\n\n    /* background-color: #526456; */\n    /* color: #535353; */\n  }\n`;\n\n// const InputPhone = styled.input``;\n\nconst List = styled.ul`\n  margin-right: auto;\n  max-width: 300;\n`;\nconst ListItem = styled.li`\n  margin-top: 5px;\n  margin-bottom: 5px;\n\n  font-size: 16px;\n`;\n\nconst Link = styled(NavLink)`\n  padding: 5px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n\n  &.active {\n    color: white;\n    background-color: orangered;\n  }\n  :hover {\n    color: white;\n    background-color: orangered;\n  }\n`;\n\nexport { FormSearch, List, Link, ListItem, SubmitBtn, InputQuery };\n","// import axios from 'axios';\n\nimport axios from 'axios';\nconst API_KEY = 'f2c538717486cd7dc01f7314dfb697ab';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\n\nasync function getTrending({ genres = 'all', window = 'day' }) {\n  const URL = `/trending/${genres}/${window}`;\n  const parameters = {\n    api_key: API_KEY,\n  };\n  try {\n    const data = await instance.get(URL, {\n      params: parameters,\n    });\n    return [...data.data.results];\n  } catch (error) {\n    console.error(error);\n  }\n}\nasync function getFilmById(id) {\n  const URL = `movie/${id}`;\n  const parameters = {\n    api_key: API_KEY,\n  };\n  try {\n    const data = await instance.get(URL, {\n      params: parameters,\n    });\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getCastsById(id) {\n  const URL = `/movie/${id}/credits`;\n  const parameters = {\n    api_key: API_KEY,\n  };\n  try {\n    const data = await instance.get(URL, {\n      params: parameters,\n    });\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nasync function getReviewsById(id) {\n    const URL = `/movie/${id}/reviews`;\n    const parameters = {\n      api_key: API_KEY,\n    };\n    try {\n      const data = await instance.get(URL, {\n        params: parameters,\n      });\n      return data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  async function getMovisByQuery(query) {\n    const URL = `/search/movie`;\n    const parameters = {\n      api_key: API_KEY,\n      query: query\n    };\n    try {\n      const data = await instance.get(URL, {\n        params: parameters,\n      });\n      return data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\nexport { getTrending, getFilmById, getMovisByQuery,getCastsById, getReviewsById };\n","import { Link, ListItem } from 'components/Movies/Movies.styled';\n\n\nexport const getListFilm = (array, path = '', location) => {\n  return array.map(movie => {\n    const title = movie.original_name\n      ? movie.original_name\n      : movie.original_title;\n    return (\n      <ListItem key={movie.id}>\n        <Link to={`${path}${movie.id}`} state={{ from: location }}>\n          {title}\n        </Link>\n      </ListItem>\n    );\n  });\n};\n"],"names":["FormSearch","styled","InputQuery","SubmitBtn","NavLink","props","heandleSubmit","value","onChangeInput","onSubmit","name","onChange","useSearchParams","searchParams","setSearchParams","location","useLocation","useState","query","setQuery","Movies","setMovies","error","setError","isLoading","setIsloading","noFaundMsg","errorMsg","filmToSearch","get","localStorage","setItem","useMemo","useEffect","postGet","getItem","getMovisByQuery","data","results","renderListFilms","getListFilm","e","preventDefault","target","Loader","length","List","ListItem","Link","API_KEY","instance","axios","baseURL","getTrending","genres","window","URL","parameters","api_key","params","console","getFilmById","id","getCastsById","getReviewsById","array","path","map","movie","title","original_name","original_title","to","state","from"],"sourceRoot":""}